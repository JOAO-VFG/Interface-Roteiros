<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAeQAAADNCAYAAABpegOzAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKM+VkT1I
        w1AUhU9TpaIVETuIKGSoThZERRwlikWwUNoKrTqYvPQPmjQkKS6OgmvBwZ/FqoOLs64OroIg+APi5uak
        6CIl3pcUWoQKXni8j/PeOdx3HyDUSkyzOiYATbfNRFQS05lVMfAKP3zoRw9GZGYZseRiCm3r657uUt1F
        eBb+V71q1mKATySeY4ZpE28Qz2zaBud94hAryCrxOfG4SQ0SP3Jd8fiNc95lgWeGzFRinjhELOZbWGlh
        VjA14mnisKrplC+kPVY5b3HWShXW6JO/MJjVV5JcpzWMKJYQQxwiFFRQRAk2IrTrpFhI0LnUxj/k+uPk
        UshVBCPHAsrQILt+8D/4PVsrNzXpJQUloPPFcT5GgcAuUK86zvex49RPAP8zcKU3/eUaMPtJerWphY+A
        vm3g4rqpKXvA5Q4w+GTIpuxKflpCLge8n9E3ZYCBW6B7zZtb4xynD0CKZrV8AxwcAmN5yl5v8+6u1rn9
        ecedH6QfJPhyiPXnIrgAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQflAwERCzs6WsSMAAARwklE
        QVR4Xu3dCbTcZXnHcYJxAVwQESMQwhJCWAMiIOSCSchCbS0mgMgVo7m1Yq2ttdZ61LZJW4/HttbaWtta
        a62ttW61ams91gURRSTIvsgadkRkcQ0ukf6eeeed886bd27+M/OfO/PM/X7O+R7e/O/M3JvD++a5N7l3
        ZicAAAAAAAAAAAAAAAAAAABgXDykHs2KHmz+t07pY+bv92EFAMCsc6PKh6IV2brOofyAyh8/7yYFAMCs
        UhqIVlS61qvSY6XX0gAAmFVKw9CKql7vVFT1egwAgFmlNAytqOr1TkVVr8cAABh76cDLB2Esqnq9U1HV
        67EoXQMAMDZKA69UVPV6p6Kq12NR/msAANybbuDlRVWvdyqqej0Wla4BAODSIyodbOlwy6/HoqrXOxVV
        vR6L8uv2ewEAwKV8qFlR6W1WVPV6p6Kq12PRdG/DLLWRaBZ3vvpSsy+qLzT7vHqDer36PfU69bvqtep3
        1G+r31KvVr+pXqVeqc5Tr1C/rl6uptQG9TL1UrVevUS9WE2qc9SL1NnqLHWmOkOtU2vVC9SvquerX1G/
        rJ6nTlNr1Gq1Sq1Up6rlapl6rjpFnawm1EnqRPUcdYI6Xj1bHauepY5RR6sl6kh1hDpcHaYOVYeoRepg
        tVAdpA5Q+6sFaj81X+2r9lbPVPPUM9Reak/1NLWHeqraXT1FPUk9Ue2mdlW7qMerx6nHqrnqMWpnZUpD
        LC8qvc2Kql7vVFT1eiwqvS3vj9QfqDerNyrbk7+v4p60/fgaZfsx7sXfUHEf2h78NRX3oO2/c5Xtv7j3
        Xqjivkv3XNxvv6Rsv9ley/dZ3GNLVdxftreOU7a34r46Stm+sj1l+2mxivvJ9tKByvZS3Ef7KNtHtods
        /zxdxf2T7p24b56gbN/Ynkn3iyulP6CIZkub1JebXaC+0uzCZl9Vf6Herv5SvUP9lXqn+hv1LvW36t3q
        79Q/qPeof1TvVf+k3qfer/5FfUD9q/o39e/qQ+o/1IfVR9RH1cfVf6pPqP9Sn1SfVv+t/kd9Rv2v+qz6
        nPo/ZZ882CcR9gmFfYKR/n7i7+Mi9XV1sfqGukRdqr6pLlOXqyvUlepqdY26Vl2nrlc3KHvmK3umqZvV
        LepWdZu6Xd2h7lR3qXvUverb6j71HXW/smeysmfGsqeztKeR/J76gfqh+pH6sdqq7K9uf6p+pn6utqlf
        KPt/VhpaeVHpbVZU9XqnoqrXd3S/Un+s/lS9Rb1VvU39mYr70vak7ce/VnE/pnsx7sN/VrYPbQ/a/vug
        ivvP9t7HlO29uO8+pWzf2Z7L95vtNfsE1vZa3GfpHkv3V9xbtq+uUnFfpXsq7qctKu4l20d3K9tHcQ99
        V9keivvn+yrunXTfxD1jH58r9j98TlgCSNhn2HaoMdryAWZFpbeNQtF0b0N/XJ5f+6zT5Zf2wIDZX5Xa
        V2gYbb18U9ewi/LrfFNXfVyeX/sMwv6+HUA7+zfMn4QlHEgHW5ReS4uqXu9UVPV6LCpdQz1cnl/7u3b7
        TAJAO/smEft3Kfgx3cBLi6pe71RU9Xosyn+N+rg8v/YlvX1XGoB29t2b9g0j8KU08PKiqtc7FVW9HovS
        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
        rkJggg==
</value>
  </data>
</root>