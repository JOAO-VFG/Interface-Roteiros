<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgResistor.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        S5CBoQSHLGAAAAAASUVORK5CYII=
</value>
  </data>
</root>